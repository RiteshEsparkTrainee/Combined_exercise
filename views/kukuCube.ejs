<html lang="en">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Exercise-2</title>
</head>
<style>
    tr,
    td {
        border: 1px solid rgb(44, 34, 187);
        height: 30px;
        width: 30px;
    }

    .timerButtonClass {
        margin-bottom: 300px;
    }

    

    .game_description {
        text-align: center;
    }

    .flex-center {
        display: flex;
        align-items: center;
        height: 350px;
    }

    table.mainTable {

        margin: auto;
    }

    .position3 {
        display: flex;
        align-items: center;
        justify-content: center;
    }
    #timeleftSec{
        margin-bottom: 300px;
        margin-left: 10px;
       
    }
    #timerButton
    {
        font-size: 20px;
        background-color: green;
        border-radius: 8px;
        color: white;
    }
    
    table {
     
        
         border: 1px solid black;
    }
  
</style>
<h1>Name:-Ritesh Jaiswal</h1>
<h1>Employee_Id:-24DEV068</h1>
<h2>Exercise-2</h2>

<body>
    <h2 class="game_description">Kuku Kuku Cube</h2>
    <h3 id="score">Your Score is :
        <span id="userScore">0 </span>
    </h3>
    <div class="flex-center">        

        <button id="timerButton" class="timerButtonClass" onclick="start()">Click here to start the Game !!</button>
        
        <div id="countdown" class="timerButtonClass"> </div>
        <div id ="timeleftSec">  Seconds Left</div>        
        
        <table class="mainTable" id="myTable">

            <tr id="row1">

                <td style="opacity: 0.5;background-color: red;"></td>
                <td style="background-color: red;"></td>
            </tr>
            <tr>
                <td style="background-color: red;"></td>
                <td style="background-color: red;"></td>
            </tr>

        </table>
    </div>



    <script>
        let userCount = 0
        let rowCount = 1, columnCount = 1, cell;
        const tbody = document.querySelector('#myTable tbody');
        tbody.addEventListener('click', function (e) {
          
            cell = e.target.closest('td');
            if (!cell) { return; } // Quit, not clicked on a cell
            row = cell.parentElement;
            
            rowCount += 1;
            columnCount += 1;
            let let_name = e.target.style.opacity
            if (let_name == "0.5") {
                checkRightClick()
                userCount += 1
                document.getElementById("userScore").innerHTML = userCount
            }
            else {
                if (userCount >= 1) {
                    userCount -= 1;
                }

                document.getElementById("userScore").innerHTML = userCount
            }
          
        });
        function add_cells() {  //apply async await
    return new Promise(resolve => {
        // Add rows
        let table = document.getElementById('myTable');
        let x = document.getElementById("row1").cells.length;
        let row = table.insertRow();

        for (let i = 0; i < x; i++) {
            row.insertCell();
        }

        // Add columns
        let rows = document.querySelectorAll("tr");
        for (let i = 0; i < rows.length; i++) {
            rows[i].insertCell();
        }

        resolve();
    });
}


function RandomColor() {
    return new Promise(resolve => {
        let myArray = [];
        for (let i = 0; i < 20; i++) {
            let randomColor = "#" + Math.floor(Math.random() * 16777215).toString(16);
            myArray.push(randomColor);
        }
        let rand = myArray[Math.floor(Math.random() * myArray.length)];

        let columns = document.querySelectorAll("td");
        for (let i = 0; i < columns.length; i++) {
            columns[i].style.backgroundColor = rand;
            columns[i].style.opacity = 1;
        }
        resolve();
    });
}

        async function checkRightClick() {
            let table1 = document.getElementById('myTable');

            await add_cells()
            await RandomColor()
            let rowslength = table1.querySelectorAll("tr").length;
            let columnslength = table1.querySelector("tr:nth-child(1)").querySelectorAll("td").length; // Assuming all rows have the same number of 
            
            realRow = Math.floor(Math.random() * rowslength)
            realColumn = Math.floor(Math.random() * columnslength)

            let ele = table1.rows[realRow].cells[realColumn];
            ele.style.opacity = "0.5"

          
        }
        let timer;
        let timeLeft = 10;
        function gameOver() {
            clearInterval(timer);           
        }
        function updateTimer() {
            timeLeft = timeLeft - 1;
            if (timeLeft >= 0)
                document.getElementById('countdown').innerHTML = timeLeft;
            else {
                gameOver();
                document.getElementById('countdown').innerHTML = "Times Up!!!";
            document.getElementById('myTable').style.display = 'none'
            document.getElementById('timerButton').style.display='none'
            document.getElementById('timeleftSec').style.display='none'        
          

            }
        }
        function start() {
            
            timer = setInterval(updateTimer, 1000);
            updateTimer();
            document.getElementById('timerButton').style.display='none'
            document.getElementById('timeleftSec').style.display='block'
            document.getElementById('myTable').style.display = 'block'
        }
        document.getElementById('timeleftSec').style.display='none'
        document.getElementById('myTable').style.display = 'none'
    </script>
</body>

</html>